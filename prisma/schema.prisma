generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String   @id @default(uuid())
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
  email                 String   @unique
  password              String?
  firstName             String?
  lastName              String?
  age                   Int?
  profileImage          String?
  smoker                Boolean?
  pets                  Boolean?
  budgetMax             Int?
  roommatePreferenceId  String?
  propertyId            String?
  emailVerificationCode String   @unique
  emailVerified         Boolean  @default(true)
  provider              String?
  providerAccountId     String?
  passwordResetCode     String?  @unique
  bgImage               String?
  description           String?
  lifestyleId           String?
  gender                String?
  moodboardImages       String[]

  // Relations
  messagesReceived Message[]           @relation("MessagesReceived")
  messagesSent     Message[]           @relation("MessagesSent")
  properties       Property[]
  reviewsWritten   Review[]            @relation("ReviewsWritten")
  reviewsReceived  Review[]            @relation("ReviewsReceived")
  Lifestyle        Lifestyle?          @relation(fields: [lifestyleId], references: [id])
  preferences      RoommatePreference? @relation(fields: [roommatePreferenceId], references: [id])

  // PROSTSZA RELACJA - implicit many-to-many
  interests Interest[] // Bez junction table!

  roommateInProperties Property[] @relation("PropertyRoommates")
}

model Property {
  id              String              @id @default(uuid())
  createdAt       DateTime            @default(now())
  updatedAt       DateTime            @updatedAt
  type            PropertyType
  status          PropertyStatus      @default(ACTIVE)
  title           String
  description     String?
  price           Int
  currency        String
  deposit         Int?
  utilities       Int?
  city            String
  district        String?
  street          String?
  postalCode      String?
  latitude        Float?
  longitude       Float?
  sizeM2          Int?
  rooms           Int?
  bathrooms       Int?
  floor           Int?
  yearBuilt       Int?
  furnished       Boolean?
  condition       String?
  balcony         Boolean?
  elevator        Boolean?
  parking         Boolean?
  petsAllowed     Boolean?
  smokingAllowed  Boolean?
  internet        Boolean?
  washingMachine  Boolean?
  dishwasher      Boolean?
  airConditioning Boolean?
  isShared        Boolean?            @default(false)
  roomType        String?
  images          String[]
  videoUrl        String?
  floorPlanUrl    String?
  ownerId         String
  owner           User                @relation(fields: [ownerId], references: [id])
  preferences     RoommatePreference?
  roommates       User[]              @relation("PropertyRoommates")
}

model RoommatePreference {
  id         String   @id @default(uuid())
  minAge     Int?
  maxAge     Int?
  gender     String?
  lifestyle  String?
  isStudent  Boolean?
  isWorker   Boolean?
  propertyId String   @unique
  property   Property @relation(fields: [propertyId], references: [id])
  User       User[]
}

model Review {
  id          String   @id @default(uuid())
  createdAt   DateTime @default(now())
  rating      Int
  comment     String?
  authorId    String
  recipientId String
  author      User     @relation("ReviewsWritten", fields: [authorId], references: [id])
  recipient   User     @relation("ReviewsReceived", fields: [recipientId], references: [id])
}

model Message {
  id         String   @id @default(uuid())
  createdAt  DateTime @default(now())
  content    String
  senderId   String
  receiverId String
  receiver   User     @relation("MessagesReceived", fields: [receiverId], references: [id])
  sender     User     @relation("MessagesSent", fields: [senderId], references: [id])
}

model Interest {
  id    String @id @default(uuid())
  name  String @unique
  users User[]
}

model Lifestyle {
  id   String @id
  name String
  User User[]
}

enum PropertyType {
  RENT
  SALE
  FLATSHARE
}

enum PropertyStatus {
  ACTIVE
  RESERVED
  RENTED
  SOLD
}
